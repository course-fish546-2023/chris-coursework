knitr::opts_chunk$set(echo = TRUE)
pwd
getwd
getwd()
library("DESeq2")
library(tidyverse)
# install.packages("pheatmap")
library(pheatmap)
library(RColorBrewer)
library(data.table)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
y
countmatrix <- read.delim("../output/kallisto_01.isoform.counts.matrix", header = TRUE, sep = '\t')
rownames(countmatrix) <- countmatrix$X
countmatrix <- countmatrix[,-1]
head(countmatrix)
countmatrix <- round(countmatrix, 0)
str(countmatrix)
deseq2.colData <- data.frame(condition=factor(c(rep("control", 12), rep("desicated", 12))),
type=factor(rep("single-read", 24)))
rownames(deseq2.colData) <- colnames(data)
deseq2.dds <- DESeqDataSetFromMatrix(countData = countmatrix,
colData = deseq2.colData,
design = ~ condition)
deseq2.dds <- DESeq(deseq2.dds)
deseq2.res <- results(deseq2.dds)
deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]
knitr::opts_chunk$set(echo = TRUE)
head(deseq2.res)
deseq2.dds <- DESeq(deseq2.dds)
library("DESeq2")
library(tidyverse)
# install.packages("pheatmap")
library(pheatmap)
library(RColorBrewer)
library(data.table)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
countmatrix <- read.delim("../output/kallisto_01.isoform.counts.matrix", header = TRUE, sep = '\t')
rownames(countmatrix) <- countmatrix$X
countmatrix <- countmatrix[,-1]
head(countmatrix)
countmatrix <- round(countmatrix, 0)
str(countmatrix)
deseq2.colData <- data.frame(condition=factor(c(rep("control", 12), rep("desicated", 12))),
type=factor(rep("single-read", 24)))
rownames(deseq2.colData) <- colnames(data)
deseq2.dds <- DESeqDataSetFromMatrix(countData = countmatrix,
colData = deseq2.colData,
design = ~ condition)
deseq2.dds <- DESeq(deseq2.dds)
deseq2.res <- results(deseq2.dds)
deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]
head(deseq2.res)
# Count number of hits with adjusted p-value less then 0.05
dim(deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ])
tmp <- deseq2.res
# The main plot
plot(tmp$baseMean, tmp$log2FoldChange, pch=20, cex=0.45, ylim=c(-3, 3), log="x", col="darkgray",
main="DEG Dessication  (pval <= 0.05)",
xlab="mean of normalized counts",
ylab="Log2 Fold Change")
# Getting the significant points and plotting them again so they're a different color
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.45, col="red")
# 2 FC lines
abline(h=c(-1,1), col="blue")
write.table(tmp.sig, "../output/DEGlist.tab", row.names = T)
box_args <- function(
vrulecolor = 'white',
hrule = c('\\abLongLine', '\\abShortLine', ''),
title = '', vrulewidth = '0pt',
icon = 'Bomb', iconcolor = 'black'
) {
hrule <- match.arg(hrule)
sprintf(
'[%s][%s][\\textbf{%s}]{%s}{\\fa%s}{%s}',
vrulecolor, hrule, title, vrulewidth, icon, iconcolor
)
}
Hello! How can I help you today?exit
knitr::opts_chunk$set(
highlight = TRUE,    # Highlight code
echo = TRUE,         # Display code chunks
eval = FALSE,        # Evaluate code chunks
warning = TRUE,     # Hide warnings
message = TRUE,     # Hide messages
fig.width = 6,       # Set plot width in inches
fig.height = 4,      # Set plot height in inches
fig.align = "center" # Align plots to the center
)
knitr::opts_chunk$set(
highlight = TRUE,    # Highlight code
echo = TRUE,         # Display code chunks
eval = FALSE,        # Evaluate code chunks
warning = TRUE,     # Hide warnings
message = TRUE,     # Hide messages
fig.width = 6,       # Set plot width in inches
fig.height = 4,      # Set plot height in inches
fig.align = "center" # Align plots to the center
)
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true", width = 50, height = 50)
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true", #width = 50, height = 50)
"I had hope. Anyway, you ended up disappointing me more than any of the other silly girls. If your library call doesn't yield the package you requested use the install.packages("package_name") code."
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true", width = 50, height = 50)
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true")
"I had hope. Anyway, you ended up disappointing me more than any of the other silly girls. If your library call doesn't yield the package you requested use the install.packages() code."
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true")
"I had hope. Anyway, you ended up disappointing me more than any of the other silly girls. If your library call doesn't yield the package you requested use the install.packages() code."
knitr::opts_chunk$set(
highlight = TRUE,    # Highlight code
echo = TRUE,         # Display code chunks
eval = FALSE,        # Evaluate code chunks
warning = TRUE,     # Hide warnings
message = TRUE,     # Hide messages
fig.width = 6,       # Set plot width in inches
fig.height = 4,      # Set plot height in inches
fig.align = "center" # Align plots to the center
)
knitr::include_graphics("https://github.com/course-fish546-2023/chris-musselcon/blob/main/photos/dwpMiranda.jpg?raw=true", width = 50, height = 50)
knitr::opts_chunk$set(
highlight = TRUE,    # Highlight code
echo = TRUE,         # Display code chunks
eval = FALSE,        # Evaluate code chunks
warning = TRUE,      # Hide warnings
message = TRUE,      # Hide messages
fig.width = 6,       # Set plot width in inches
fig.height = 4,      # Set plot height in inches
fig.align = "center" # Align plots to the center
)
library(quarto)
install.packages(quarto)
install.packages("quarto")
library(quarto)
quarto_callout(
type = "note",
icon = "photos/miranda.png",
content = "The truth is, there is no one that can do what I do. If you don't pay attention to your file structure and comment your code- you're right. Take the time now to intentionally set up your future self and colleagues for success."
)
# find out where you are before you start
getwd()
BiocManager::install("DESeq2")
library(knitr)
library(tidyverse)
library(kableExtra)
library(DESeq2)
library(pheatmap)
library(RColorBrewer)
library(data.table)
library(DT)
library(Biostrings)
countmatrix <- read.delim("../output/kallisto_01.isoform.counts.matrix", header = TRUE, sep = '\t')
rownames(countmatrix) <- countmatrix$X
countmatrix <- countmatrix[,-1]
head(countmatrix)
countmatrix <- round(countmatrix, 0)
str(countmatrix)
deseq2.colData <- data.frame(condition=factor(c(rep("control", 12), rep("desicated", 12))),
type=factor(rep("single-read", 24)))
rownames(deseq2.colData) <- colnames(data)
deseq2.dds <- DESeqDataSetFromMatrix(countData = countmatrix,
colData = deseq2.colData,
design = ~ condition)
deseq2.dds <- DESeq(deseq2.dds)
deseq2.res <- results(deseq2.dds)
deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]
head(deseq2.res)
# Count number of hits with adjusted p-value less then 0.05
dim(deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ])
tmp <- deseq2.res
# The main plot
plot(tmp$baseMean, tmp$log2FoldChange, pch=20, cex=0.45, ylim=c(-3, 3), log="x", col="darkgray",
main="DEG Dessication  (pval <= 0.05)",
xlab="mean of normalized counts",
ylab="Log2 Fold Change")
# Getting the significant points and plotting them again so they're a different color
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.45, col="red")
# 2 FC lines
abline(h=c(-1,1), col="blue")
write.table(tmp.sig, "../output/DEGlist.tab", row.names = T)
